generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart {
  id                 Int             @id @default(autoincrement())
  user_id            Int
  product_details_id Int
  quantity           Int
  product_details    product_details @relation(fields: [product_details_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_ibfk_2")
  users              users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_ibfk_1")

  @@index([product_details_id], map: "fk_cart_product_details_id_product_details_id")
  @@index([user_id], map: "fk_cart_user_id_users_id")
}

model category {
  id       Int        @id @default(autoincrement())
  category String     @db.VarChar(255)
  products products[]
}

model color {
  id            Int             @id @default(autoincrement())
  color         String          @db.VarChar(255)
  product_color product_color[]
}

model product_color {
  id              Int               @id @default(autoincrement())
  color_id        Int
  product_id      Int
  color           color             @relation(fields: [color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_color_ibfk_1")
  products        products          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_color_ibfk_2")
  product_details product_details[]
  product_images  product_images[]

  @@index([color_id], map: "fk_color_color_id_color_id")
  @@index([product_id], map: "fk_product_product_id_products_id")
}

model product_details {
  id               Int           @id @default(autoincrement())
  product_color_id Int
  size_id          Int
  stock            Int
  product_color    product_color @relation(fields: [product_color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_details_ibfk_1")
  size             size          @relation(fields: [size_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_details_ibfk_2")
  cart             cart[]

  @@index([product_color_id], map: "fk_product_details_product_color_id_product_color_id")
  @@index([size_id], map: "fk_product_details_size_id_size_id")
}

model product_images {
  id               Int           @id @default(autoincrement())
  url              String        @db.VarChar(255)
  product_color_id Int
  product_color    product_color @relation(fields: [product_color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_images_ibfk_1")

  @@index([product_color_id], map: "fk_product_images_product_color_id_product_color_id")
}

model products {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  price         Int
  sales_count   Int?
  category_id   Int
  description   String?         @db.VarChar(255)
  made_in       String?         @db.VarChar(255)
  created_at    DateTime?       @default(now()) @db.DateTime(0)
  category      category        @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_ibfk_1")
  product_color product_color[]

  @@index([category_id], map: "fk_products_category_id_category_id")
}

model size {
  id              Int               @id @default(autoincrement())
  size            String            @db.VarChar(255)
  product_details product_details[]
}

model users {
  id         Int       @id @default(autoincrement())
  email      String    @db.VarChar(255)
  password   String    @db.VarChar(255)
  name       String    @db.VarChar(255)
  address    String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.DateTime(0)
  cart       cart[]
}
